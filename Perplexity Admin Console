-- Perplexity Admin Console 
-- Authour: Perplexity

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer

local function getFredokaFont()
    for _, f in ipairs(Enum.Font:GetEnumItems()) do
        if tostring(f):lower():find("fredoka") then
            return f
        end
    end
    return Enum.Font.Gotham
end
local mainFont = getFredokaFont()

-- GUI
local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
gui.Name = "PerplexityAdminConsole"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 700, 0, 460)
frame.Position = UDim2.new(0.5, -350, 0.6, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BackgroundTransparency = 0.3
frame.BorderColor3 = Color3.fromRGB(255, 60, 60)
frame.BorderSizePixel = 3
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Visible = true

local frameCorner = Instance.new("UICorner", frame)
frameCorner.CornerRadius = UDim.new(0, 20)

-- Title bar
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -130, 0, 44)
title.Position = UDim2.new(0, 24, 0, 10)
title.BackgroundTransparency = 1
title.Font = mainFont
title.Text = "Perplexity Admin Console"
title.TextColor3 = Color3.fromRGB(255, 100, 100)
title.TextSize = 30
title.TextXAlignment = Enum.TextXAlignment.Left

local hideBtn = Instance.new("TextButton", frame)
hideBtn.Size = UDim2.new(0, 38, 0, 38)
hideBtn.Position = UDim2.new(1, -110, 0, 10)
hideBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
hideBtn.Text = "–"
hideBtn.Font = mainFont
hideBtn.TextColor3 = Color3.new(1,1,1)
hideBtn.TextSize = 30
local hideBtnCorner = Instance.new("UICorner", hideBtn)
hideBtnCorner.CornerRadius = UDim.new(0, 10)

local closeBtn = Instance.new("TextButton", frame)
closeBtn.Size = UDim2.new(0, 38, 0, 38)
closeBtn.Position = UDim2.new(1, -60, 0, 10)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.Text = "X"
closeBtn.Font = mainFont
closeBtn.TextColor3 = Color3.new(1,1,1)
closeBtn.TextSize = 26
local closeBtnCorner = Instance.new("UICorner", closeBtn)
closeBtnCorner.CornerRadius = UDim.new(0, 10)

-- Resize grip
local resizeGrip = Instance.new("Frame", frame)
resizeGrip.Size = UDim2.new(0, 24, 0, 24)
resizeGrip.Position = UDim2.new(1, -24, 1, -24)
resizeGrip.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
resizeGrip.BackgroundTransparency = 0.3
resizeGrip.BorderSizePixel = 0
resizeGrip.ZIndex = 10
local resizeCorner = Instance.new("UICorner", resizeGrip)
resizeCorner.CornerRadius = UDim.new(0, 10)
local resizeIcon = Instance.new("ImageLabel", resizeGrip)
resizeIcon.BackgroundTransparency = 1
resizeIcon.Size = UDim2.new(1,0,1,0)
resizeIcon.Image = "rbxassetid://3926305904"
resizeIcon.ImageRectOffset = Vector2.new(964, 324)
resizeIcon.ImageRectSize = Vector2.new(36, 36)

-- Input box
local inputBox = Instance.new("TextBox", frame)
inputBox.Size = UDim2.new(1, -32, 0, 40)
inputBox.Position = UDim2.new(0, 16, 1, -60)
inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
inputBox.BackgroundTransparency = 0.15
inputBox.TextColor3 = Color3.new(1,1,1)
inputBox.Font = mainFont
inputBox.PlaceholderText = "Enter the command"
inputBox.TextSize = 22
inputBox.ClearTextOnFocus = false
inputBox.Text = ""
local inputCorner = Instance.new("UICorner", inputBox)
inputCorner.CornerRadius = UDim.new(0, 10)

-- Output frame
local outputFrame = Instance.new("ScrollingFrame", frame)
outputFrame.Size = UDim2.new(0.65, -20, 1, -120)
outputFrame.Position = UDim2.new(0, 16, 0, 60)
outputFrame.BackgroundTransparency = 1
outputFrame.BorderSizePixel = 0
outputFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
outputFrame.ScrollBarThickness = 8
local uiListLayout = Instance.new("UIListLayout", outputFrame)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 8)

-- Command list frame
local cmdListFrame = Instance.new("Frame", frame)
cmdListFrame.Size = UDim2.new(0.35, -20, 1, -120)
cmdListFrame.Position = UDim2.new(0.65, 16, 0, 60)
cmdListFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 34)
cmdListFrame.BackgroundTransparency = 0.25
cmdListFrame.BorderSizePixel = 0
local cmdListCorner = Instance.new("UICorner", cmdListFrame)
cmdListCorner.CornerRadius = UDim.new(0, 16)

local cmdListTitle = Instance.new("TextLabel", cmdListFrame)
cmdListTitle.Size = UDim2.new(1, -24, 0, 36)
cmdListTitle.Position = UDim2.new(0, 12, 0, 12)
cmdListTitle.BackgroundTransparency = 1
cmdListTitle.Font = mainFont
cmdListTitle.Text = "Command List"
cmdListTitle.TextColor3 = Color3.fromRGB(255, 100, 100)
cmdListTitle.TextSize = 22
cmdListTitle.TextXAlignment = Enum.TextXAlignment.Left

local cmdScrolling = Instance.new("ScrollingFrame", cmdListFrame)
cmdScrolling.Size = UDim2.new(1, -24, 1, -60)
cmdScrolling.Position = UDim2.new(0, 12, 0, 52)
cmdScrolling.BackgroundTransparency = 1
cmdScrolling.BorderSizePixel = 0
cmdScrolling.CanvasSize = UDim2.new(0, 0, 0, 0)
cmdScrolling.ScrollBarThickness = 8

local cmdListLayout = Instance.new("UIListLayout", cmdScrolling)
cmdListLayout.SortOrder = Enum.SortOrder.LayoutOrder
cmdListLayout.Padding = UDim.new(0, 6)

-- Print message function
local function printMessage(text, color)
    local msg = Instance.new("TextLabel")
    msg.Size = UDim2.new(1, 0, 0, 28)
    msg.BackgroundTransparency = 1
    msg.Font = mainFont
    msg.TextSize = 20
    msg.TextColor3 = color or Color3.new(1,1,1)
    msg.Text = text
    msg.TextXAlignment = Enum.TextXAlignment.Left
    msg.TextWrapped = true
    msg.Parent = outputFrame

    outputFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y)
    outputFrame.CanvasPosition = Vector2.new(0, outputFrame.CanvasSize.Y.Offset)
end

-- Command system
local commands = {}
local commandNames = {}

local function addCommand(name, func, desc)
    commands[name:lower()] = {callback = func, desc = desc}
    table.insert(commandNames, name)
    -- Add to command list UI
    local cmdItem = Instance.new("TextLabel")
    cmdItem.Size = UDim2.new(1, 0, 0, 24)
    cmdItem.BackgroundTransparency = 1
    cmdItem.Font = mainFont
    cmdItem.TextSize = 18
    cmdItem.TextColor3 = Color3.fromRGB(255, 255, 255)
    cmdItem.Text = name.." — "..desc
    cmdItem.TextXAlignment = Enum.TextXAlignment.Left
    cmdItem.TextWrapped = true
    cmdItem.Parent = cmdScrolling
    cmdScrolling.CanvasSize = UDim2.new(0, 0, 0, cmdListLayout.AbsoluteContentSize.Y)
end



-- Fly / Unfly
local flyConn, flyGyro, flyBV
addCommand("fly", function()
    local character = LocalPlayer.Character
    if not character then printMessage("Character not loaded.", Color3.fromRGB(255,100,100)) return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not hrp or not humanoid then printMessage("No HumanoidRootPart.", Color3.fromRGB(255,100,100)) return end
    if flyBV or flyGyro then
        printMessage("Already flying. Use 'unfly' to stop.", Color3.fromRGB(255,200,100))
        return
    end
    flyBV = Instance.new("BodyVelocity")
    flyBV.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    flyBV.Velocity = Vector3.new(0,0,0)
    flyBV.Parent = hrp

    flyGyro = Instance.new("BodyGyro")
    flyGyro.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
    flyGyro.CFrame = hrp.CFrame
    flyGyro.P = 1e4
    flyGyro.Parent = hrp

    humanoid.PlatformStand = true
    printMessage("Fly enabled. WASD — move, Space — up, Shift — down.", Color3.fromRGB(100,255,100))

    flyConn = RunService.RenderStepped:Connect(function()
        if not flyBV or not flyGyro or not hrp or not humanoid then return end
        local move = Vector3.new()
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then move = move + hrp.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then move = move - hrp.CFrame.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then move = move - hrp.CFrame.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then move = move + hrp.CFrame.RightVector end
        local up = UserInputService:IsKeyDown(Enum.KeyCode.Space) and 1 or 0
        local down = UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) and 1 or 0
        local speed = 60
        local y = (up - down) * speed
        local v = move.Magnitude > 0 and move.Unit * speed or Vector3.new()
        flyBV.Velocity = Vector3.new(v.X, y, v.Z)
        flyGyro.CFrame = workspace.CurrentCamera.CFrame
    end)
end, "Enable fly (WASD, Space=up, Shift=down)")

addCommand("unfly", function()
    local character = LocalPlayer.Character
    if not character then printMessage("Character not loaded.", Color3.fromRGB(255,100,100)) return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid.PlatformStand = false end
    if flyBV then flyBV:Destroy() flyBV = nil end
    if flyGyro then flyGyro:Destroy() flyGyro = nil end
    if flyConn then flyConn:Disconnect() flyConn = nil end
    printMessage("Fly disabled.", Color3.fromRGB(255,150,150))
end, "Disable fly")

-- Noclip / Unnoclip
local noclipConn
addCommand("noclip", function()
    if noclipConn then printMessage("Already noclipping. Use 'unnoclip' to stop.", Color3.fromRGB(255,200,100)) return end
    printMessage("Noclip enabled.", Color3.fromRGB(100,255,100))
    noclipConn = RunService.Stepped:Connect(function()
        local char = LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetChildren()) do
                if part:IsA("BasePart") then part.CanCollide = false end
            end
        end
    end)
end, "Enable noclip")

addCommand("unnoclip", function()
    if noclipConn then noclipConn:Disconnect() noclipConn = nil end
    local char = LocalPlayer.Character
    if char then
        for _, part in pairs(char:GetChildren()) do
            if part:IsA("BasePart") then part.CanCollide = true end
        end
    end
    printMessage("Noclip disabled.", Color3.fromRGB(255,150,150))
end, "Disable noclip")

-- ESP / Unesp
local espHighlights = {}
addCommand("esp", function()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and not espHighlights[p] then
            local h = Instance.new("Highlight")
            h.Name = "PA_ESP"
            h.Adornee = p.Character
            h.FillColor = Color3.fromRGB(255, 60, 60)
            h.OutlineColor = Color3.fromRGB(255, 255, 255)
            h.FillTransparency = 0.25
            h.OutlineTransparency = 0
            h.Parent = game:GetService("CoreGui")
            espHighlights[p] = h
        end
    end
    printMessage("ESP enabled (Highlight).", Color3.fromRGB(100,255,100))
end, "Highlight all players")

addCommand("unesp", function()
    for _, h in pairs(espHighlights) do
        if h and h.Parent then h:Destroy() end
    end
    espHighlights = {}
    printMessage("ESP removed.", Color3.fromRGB(255,150,150))
end, "Remove ESP")

-- Bang
addCommand("bang", function()
    local character = LocalPlayer.Character
    if not character then printMessage("Character not loaded.", Color3.fromRGB(255,100,100)) return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if hrp then hrp.Velocity = Vector3.new(0, 120, 0) end
    printMessage("Bang: launched up!", Color3.fromRGB(100,255,100))
end, "Launch yourself up")

-- Invisible / Uninvisible
addCommand("invisible", function()
    local character = LocalPlayer.Character
    if not character then printMessage("Character not loaded.", Color3.fromRGB(255,100,100)) return end
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then part.Transparency = 1 end
        if part:IsA("Decal") then part.Transparency = 1 end
    end
    printMessage("Invisibility enabled.", Color3.fromRGB(100,255,100))
end, "Enable invisibility")

addCommand("uninvisible", function()
    local character = LocalPlayer.Character
    if not character then printMessage("Character not loaded.", Color3.fromRGB(255,100,100)) return end
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then part.Transparency = 0 end
        if part:IsA("Decal") then part.Transparency = 0 end
    end
    printMessage("Invisibility disabled.", Color3.fromRGB(255,150,150))
end, "Disable invisibility")

-- Godmode / Ungodmode
local godConn
addCommand("godmode", function()
    if godConn then printMessage("Already godmode. Use 'ungodmode' to stop.", Color3.fromRGB(255,200,100)) return end
    printMessage("Godmode enabled.", Color3.fromRGB(100,255,100))
    godConn = RunService.Heartbeat:Connect(function()
        local char = LocalPlayer.Character
        if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.MaxHealth = math.huge
                hum.Health = math.huge
            end
        end
    end)
end, "Enable godmode")

addCommand("ungodmode", function()
    if godConn then godConn:Disconnect() godConn = nil end
    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.MaxHealth = 100
            hum.Health = 100
        end
    end
    printMessage("Godmode disabled.", Color3.fromRGB(255,150,150))
end, "Disable godmode")

-- Speed / Jumppower
addCommand("speed", function(args)
    local speed = tonumber(args[2])
    if not speed or speed < 0 then printMessage("Usage: speed [number]", Color3.fromRGB(255,100,100)) return end
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = speed
        printMessage("WalkSpeed set to "..speed, Color3.fromRGB(100,255,100))
    else
        printMessage("Humanoid not found.", Color3.fromRGB(255,100,100))
    end
end, "Set your walkspeed (speed [number])")

addCommand("jumppower", function(args)
    local jump = tonumber(args[2])
    if not jump or jump < 0 then printMessage("Usage: jumppower [number]", Color3.fromRGB(255,100,100)) return end
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.JumpPower = jump
        printMessage("JumpPower set to "..jump, Color3.fromRGB(100,255,100))
    else
        printMessage("Humanoid not found.", Color3.fromRGB(255,100,100))
    end
end, "Set your jump power (jumppower [number])")

-- Kick (self)
addCommand("kick", function()
    LocalPlayer:Kick("You have been kicked by Perplexity Admin.")
end, "Kick yourself from the game")

-- Freeze / Unfreeze
local freezeConn
addCommand("freeze", function()
    if freezeConn then printMessage("Already frozen. Use 'unfreeze' to stop.", Color3.fromRGB(255,200,100)) return end
    printMessage("Frozen.", Color3.fromRGB(100,255,100))
    freezeConn = RunService.Heartbeat:Connect(function()
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.Velocity = Vector3.new()
        end
    end)
end, "Freeze yourself")

addCommand("unfreeze", function()
    if freezeConn then freezeConn:Disconnect() freezeConn = nil end
    printMessage("Unfrozen.", Color3.fromRGB(255,150,150))
end, "Unfreeze yourself")

-- Clone
addCommand("clone", function()
    local char = LocalPlayer.Character
    if char then
        local clone = char:Clone()
        clone.Parent = workspace
        clone:SetPrimaryPartCFrame(char:GetPrimaryPartCFrame() * CFrame.new(3,0,0))
        printMessage("Character cloned.", Color3.fromRGB(100,255,100))
    end
end, "Clone your character")

-- Bring
addCommand("bring", function()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = workspace.CurrentCamera.CFrame + Vector3.new(0,0,-5)
        printMessage("Brought to camera.", Color3.fromRGB(100,255,100))
    end
end, "Bring yourself to camera")

-- Tp
addCommand("tp", function(args)
    local x, y, z = tonumber(args[2]), tonumber(args[3]), tonumber(args[4])
    if not (x and y and z) then printMessage("Usage: tp [x] [y] [z]", Color3.fromRGB(255,100,100)) return end
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
        printMessage("Teleported to ("..x..","..y..","..z..")", Color3.fromRGB(100,255,100))
    end
end, "Teleport to coordinates (tp x y z)")

-- Respawn
addCommand("respawn", function()
    LocalPlayer:LoadCharacter()
    printMessage("Respawned.", Color3.fromRGB(100,255,100))
end, "Respawn your character")

-- Sethealth
addCommand("sethealth", function(args)
    local n = tonumber(args[2])
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum and n then hum.Health = n printMessage("Health set to "..n, Color3.fromRGB(100,255,100)) end
end, "Set your health (sethealth [number])")

-- Setgravity
addCommand("setgravity", function(args)
    local n = tonumber(args[2])
    if n then workspace.Gravity = n printMessage("Gravity set to "..n, Color3.fromRGB(100,255,100)) end
end, "Set gravity (setgravity [number])")

-- Settime
addCommand("settime", function(args)
    local n = tonumber(args[2])
    if n then Lighting.ClockTime = n printMessage("Time set to "..n, Color3.fromRGB(100,255,100)) end
end, "Set time (settime [0-24])")

-- Rainbow / Unrainbow
local rainbowConn
addCommand("rainbow", function()
    if rainbowConn then printMessage("Already rainbow. Use 'unrainbow' to stop.", Color3.fromRGB(255,200,100)) return end
    printMessage("Rainbow enabled.", Color3.fromRGB(100,255,100))
    rainbowConn = RunService.Heartbeat:Connect(function()
        local char = LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Color = Color3.fromHSV(tick()%5/5,1,1)
                end
            end
        end
    end)
end, "Rainbow character")

addCommand("unrainbow", function()
    if rainbowConn then rainbowConn:Disconnect() rainbowConn = nil end
    printMessage("Rainbow disabled.", Color3.fromRGB(255,150,150))
end, "Disable rainbow")

-- Clear console
addCommand("clear", function()
    for _, c in pairs(outputFrame:GetChildren()) do
        if c:IsA("TextLabel") then c:Destroy() end
    end
end, "Clear console output")

-- Spin / Unspin
local spinConn
addCommand("spin", function()
    if spinConn then printMessage("Already spinning. Use 'unspin' to stop.", Color3.fromRGB(255,200,100)) return end
    printMessage("Spinning enabled.", Color3.fromRGB(100,255,100))
    spinConn = RunService.Heartbeat:Connect(function()
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(6), 0)
        end
    end)
end, "Spin your character")

addCommand("unspin", function()
    if spinConn then spinConn:Disconnect() spinConn = nil end
    printMessage("Spinning disabled.", Color3.fromRGB(255,150,150))
end, "Stop spinning")

-- Sit / Unsit
addCommand("sit", function()
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.Sit = true end
end, "Sit down")

addCommand("unsit", function()
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.Sit = false end
end, "Stand up")

-- Rig type switch
addCommand("r6", function()
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.RigType = Enum.HumanoidRigType.R6 end
end, "Switch to R6")

addCommand("r15", function()
    local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if hum then hum.RigType = Enum.HumanoidRigType.R15 end
end, "Switch to R15")

-- Help
addCommand("help", function()
    printMessage("Available commands:", Color3.fromRGB(255, 255, 100))
    for cmd, data in pairs(commands) do
        printMessage(" - "..cmd..": "..data.desc, Color3.fromRGB(200, 200, 200))
    end
end, "Show this help message")

-- === AUTOCOMPLETE ===
local autocompleteBox = Instance.new("TextLabel", frame)
autocompleteBox.Size = UDim2.new(1, -32, 0, 40)
autocompleteBox.Position = UDim2.new(0, 16, 1, -102)
autocompleteBox.BackgroundTransparency = 1
autocompleteBox.Font = mainFont
autocompleteBox.TextSize = 18
autocompleteBox.TextColor3 = Color3.fromRGB(180, 255, 180)
autocompleteBox.TextXAlignment = Enum.TextXAlignment.Left
autocompleteBox.TextWrapped = true
autocompleteBox.Visible = false

local acIndex, acMatches = 1, {}

local function updateAutocomplete()
    local text = inputBox.Text:lower()
    acMatches = {}
    for _, cmd in ipairs(commandNames) do
        if cmd:lower():sub(1, #text) == text and text ~= "" then
            table.insert(acMatches, cmd)
        end
    end
    if #acMatches > 0 then
        autocompleteBox.Visible = true
        autocompleteBox.Text = "Suggestions: " .. table.concat(acMatches, "   ")
        acIndex = 1
    else
        autocompleteBox.Visible = false
    end
end

inputBox:GetPropertyChangedSignal("Text"):Connect(updateAutocomplete)

inputBox.FocusLost:Connect(function(enterPressed)
    if not enterPressed then return end
    local text = inputBox.Text
    inputBox.Text = ""
    autocompleteBox.Visible = false
    printMessage("> "..text, Color3.fromRGB(255, 255, 255))

    local args = {}
    for word in text:gmatch("%S+") do
        table.insert(args, word)
    end
    local cmd = args[1] and args[1]:lower()
    if cmd and commands[cmd] then
        local success, err = pcall(function()
            commands[cmd].callback(args)
        end)
        if not success then
            printMessage("Error: "..err, Color3.fromRGB(255, 100, 100))
        end
    else
        printMessage("Unknown command: "..(cmd or ""), Color3.fromRGB(255, 100, 100))
    end
end)

UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if inputBox:IsFocused() and input.KeyCode == Enum.KeyCode.Tab and #acMatches > 0 then
        inputBox.Text = acMatches[acIndex]
        acIndex = acIndex % #acMatches + 1
        inputBox.CursorPosition = #inputBox.Text + 1
        updateAutocomplete()
    end
end)

-- === DRAG WINDOW ===
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and input.Position.Y-frame.AbsolutePosition.Y < 50 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- === RESIZE WINDOW ===
local resizing, resizeStart, resizeSize
resizeGrip.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        resizing = true
        resizeStart = input.Position
        resizeSize = frame.Size
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                resizing = false
            end
        end)
    end
end)
resizeGrip.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and resizing then
        local delta = input.Position - resizeStart
        local newW = math.max(550, resizeSize.X.Offset + delta.X)
        local newH = math.max(350, resizeSize.Y.Offset + delta.Y)
        frame.Size = UDim2.new(0, newW, 0, newH)
    end
end)

-- === OPEN BUTTON ===
local showBtn = Instance.new("TextButton", gui)
showBtn.Size = UDim2.new(0, 220, 0, 50)
showBtn.Position = UDim2.new(0, 18, 1, -70)
showBtn.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
showBtn.BackgroundTransparency = 0.15
showBtn.Text = "Open Perplexity Admin"
showBtn.Font = mainFont
showBtn.TextSize = 22
showBtn.TextColor3 = Color3.new(1,1,1)
showBtn.Visible = false
local showBtnCorner = Instance.new("UICorner", showBtn)
showBtnCorner.CornerRadius = UDim.new(0, 14)

local function showConsole()
    frame.Visible = true
    TweenService:Create(frame, TweenInfo.new(0.5, Enum.EasingStyle.Elastic), {
        Position = UDim2.new(0.5, -frame.Size.X.Offset/2, 0.6, 0),
        BackgroundTransparency = 0.3
    }):Play()
    TweenService:Create(showBtn, TweenInfo.new(0.25), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
    wait(0.25)
    showBtn.Visible = false
end

local function hideConsole()
    TweenService:Create(frame, TweenInfo.new(0.3), {
        Position = UDim2.new(0.5, -frame.Size.X.Offset/2, 1, 400),
        BackgroundTransparency = 1
    }):Play()
    wait(0.3)
    frame.Visible = false
    showBtn.BackgroundTransparency = 1
    showBtn.TextTransparency = 1
    showBtn.Visible = true
    TweenService:Create(showBtn, TweenInfo.new(0.25), {BackgroundTransparency = 0.15, TextTransparency = 0}):Play()
end

hideBtn.MouseButton1Click:Connect(hideConsole)
showBtn.MouseButton1Click:Connect(showConsole)
closeBtn.MouseButton1Click:Connect(function()
    TweenService:Create(frame, TweenInfo.new(0.3), {Position = UDim2.new(0.5, -frame.Size.X.Offset/2, 1, 400), BackgroundTransparency = 1}):Play()
    wait(0.3)
    frame.Visible = false
    showBtn.Visible = false
end)

-- === ENTRY ANIMATION ===
frame.Position = UDim2.new(0.5, -350, 1, 400)
frame.BackgroundTransparency = 1
TweenService:Create(frame, TweenInfo.new(0.7, Enum.EasingStyle.Elastic), {
    Position = UDim2.new(0.5, -350, 0.6, 0),
    BackgroundTransparency = 0.3
}):Play()

printMessage("Welcome to Perplexity Admin Console!", Color3.fromRGB(255, 200, 100))
printMessage("Type 'help' for a list of commands.", Color3.fromRGB(255, 255, 100))
